#!/usr/bin/python

from checknetwork import internet_on
from sensorReaderMaxbotix import read_distance
from googleuploader import upload_row_to_google_sheet, upload_realtime_reading_to_google_sheet, get_config_from_worksheet
from uploadReadingCollectionAPI import upload_collection_to_google_sheet
import sys
import time
import gspread
import serial
import json
from datetime import datetime
from oauth2client.service_account import ServiceAccountCredentials

def write_to_file(date, timeNow, distance, sensorIndex):
    file = open('readingCollectionDB', 'a')
    file.write(str(date) + "," + str(timeNow) + "," + str(distance) + "," + str(sensorIndex) + "\n")
    print("Wrote to file: Date:" + str(date) + " | Time:" + str(timeNow) + " | Distance:" + str(distance)) + "| sensorIndex:" + str(sensorIndex + 1)
    file.close()

def execute_process(key, numberOfSensor, dailyLogHour):
        date = datetime.now().strftime("%m/%d/%Y")
        timeNow = datetime.now().strftime("%I:%M %p")

        # Get current hour in 24 hour format and remove leading 0. i.e. 09 becomes 9
        current_hour = datetime.now().strftime("%H").lstrip('0')

        insertDailyLog = str(current_hour) == str(dailyLogHour)

        if internet_on():
          # upload the csv file to google sheet.
          upload_collection_to_google_sheet(key)
      

        for sensorIndex in range(0, int(numberOfSensor)):
          distance = read_distance("/dev/ttyUSB" + str(sensorIndex))
          if distance == False:
            return

          if internet_on():
            upload_realtime_reading_to_google_sheet(date, timeNow, distance, key, sensorIndex)
            if (insertDailyLog):
              upload_row_to_google_sheet(date, timeNow, distance, key, sensorIndex)

          else:
            if (insertDailyLog):
              print "No internet, writing to file"
              write_to_file(date, timeNow, distance, sensorIndex)	


if __name__ == "__main__":
    with open('/home/pi/Desktop/sukatan/config.json') as data_file:
      data = json.load(data_file)

    if internet_on():
      configDataFromGoogleSheet = get_config_from_worksheet(data["googleSheetKey"])
      data.update(configDataFromGoogleSheet)

    if data["googleSheetKey"] and data["sensorCount"] and data["dailyLogHour"]:
      execute_process(data["googleSheetKey"], data["sensorCount"], data["dailyLogHour"])
    else:
      print "Missing fields in config.json. Check config file"
